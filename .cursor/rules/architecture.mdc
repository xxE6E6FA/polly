---
description: Project architecture overview and stack information
---

# Architecture Overview

## Tech Stack
- **Frontend**: React 19 + TypeScript + Vite + React Router v7
- **Backend**: Convex (serverless functions, realtime database, auth, file storage)
- **Styling**: TailwindCSS + shadcn/ui (Radix UI components)
- **AI Integration**: Vercel AI SDK with multiple providers
- **Code Quality**: Biome (replaces ESLint + Prettier)
- **Testing**: Vitest + React Testing Library

## Key Data Models
- **`users`**: User accounts and profiles
- **`conversations`**: Chat conversations with search and archiving
- **`messages`**: Individual chat messages with streaming support
- **`personas`**: User-defined AI personas/assistants
- **`userApiKeys`**: User's AI provider API keys
- **`backgroundJobs`**: Async task management
- **`sharedConversations`**: Public conversation sharing

## Routing Structure
- **`/`**: Home page
- **`/chat/:conversationId`**: Individual conversations
- **`/private`**: Private chat mode
- **`/settings/*`**: Settings pages (API keys, models, personas, etc.)
- **`/share/:shareId`**: Public shared conversations

## Frontend Organization
- **`src/components/`**: Reusable UI components
- **`src/pages/`**: Route-specific page components
- **`src/hooks/`**: Custom React hooks
- **`src/lib/`**: Utility functions and helpers
- **`src/providers/`**: React context providers
- **`shared/`**: Code shared between frontend and backend

## Backend Organization
- **`convex/`**: Serverless functions and database schema
- **`convex/ai/`**: AI provider integrations and streaming
- **`convex/lib/`**: Backend utilities and helpers

## AI Integration
- **Multi-Provider**: Anthropic, OpenAI, Google, OpenRouter
- **Streaming**: Real-time responses via Convex HTTP routes
- **Web Search**: Exa.ai integration for enhanced context
- **Image Generation**: Replicate integration
- **TTS**: ElevenLabs integration
- **Reasoning Detection**: Automatic detection for advanced models

## Development Features
- **Realtime**: Convex provides automatic sync across clients
- **Authentication**: Google OAuth via Convex Auth
- **File Storage**: Convex file storage for uploads
- **PWA**: Installable app with offline fallback
- **Background Jobs**: Async task processing
- **Conversation Management**: History, archiving, sharing, private mode

## Environment Variables

### Frontend (.env.local)
- `VITE_CONVEX_URL`: Convex deployment URL (required)

### Convex Backend (Dashboard)
- `GEMINI_API_KEY`: Google Gemini for PDF processing
- `EXA_API_KEY`: Exa.ai for web search
- `REPLICATE_API_TOKEN`: Replicate for image generation
- `ELEVENLABS_API_KEY`: ElevenLabs for text-to-speech
- `AUTH_GOOGLE_ID`: Google OAuth Client ID
- `AUTH_GOOGLE_SECRET`: Google OAuth Client Secret
- `SITE_URL`: Production URL for OAuth redirects

## Key Patterns
- **Streaming**: HTTP actions with NDJSON streaming
- **Optimistic Updates**: UI updates before server confirmation
- **Virtualization**: Large lists use virtual scrolling
- **Caching**: Intelligent caching for performance
- **Error Boundaries**: Proper error handling throughout
- **Type Safety**: End-to-end TypeScript with Convex types